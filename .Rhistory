usethis::use_package("tibble")
?usethis::usepackage
?usethis::use_package
ff <- tibble::tibble()
ff
class(ff)
q()
c
foo
foo
print.foo(foo)
methods("print")
foo
class(foo)
foo
print.data.frame
foo
class(foo)
foo
foo
foo
foo
ftype(NextMethod)
pryr::ftype(NextMethod)
NextMethod
foo
?NextMethod
class(x)
foo
foo
specify(data.frame(a = 1:3, b = 4:6))
specify(data.frame(a = 1:3, b = 4:6))
ff <- specify(data.frame(a = 1:3, b = 4:6))
str(ff)
x$df
ff$df
?NextMethod
ff <- specify(data.frame(a = 1:3, b = 4:6))
ff
ff <- specify(data.frame(a = 1:3, b = 4:6))
ff
?inherits
?inherits
specify(iris)
ff
specify(iris)
head(specify(iris))
head
head(ff)
tail
tail(ff)
head(ff)
tail(ff)
ff
head(ff,1)
?head
head(ff)
specify(data.frame(a = 1:7, b = 2:8))
ff <- specify(data.frame(a = 1:7, b = 2:8))
head(ff)
?tail
?usethis::use_package
devtools::load("..")
devtools::load_all("..")
devtools::load_all("..")
foo
rm(foo)
ff
ff
specify(data.frame(a = 1:7, b = 2:8))
devtools::load_all("..")
specify(data.frame(a = 1:7, b = 2:8))
q()
n
getwd()
setwd("..")
devtools::load_all()
specify(data.frame(a = 1:7))
specify(data.frame(a = 1:7))
methods(class = "data.frame")
ff <- specify(data.frame(a = 1:7))
ff[1, ]
ff <- specify(data.frame(a = 1:7))
ff
ff
str(ff)

+ + + > ff <- specify(data.frame(a = 1:7))

+ + + > ff <- specify(data.frame(a = 1:7))
ff <- specify(data.frame(a = 1:7))
ff
ff[1, 1]
names(ff)
?attr
specify(tibble::tibble(a = 1:8))
ff <- specify(tibble::tibble(a = 1:8))
ff
class(ff)
ff <- specify(tibble::tibble(a = 1:8))
ff
class(ff)
print.tbl_df(ff)
print.tbl(ff)
ff
print.tbl_df(ff)
print.tbl_df(ff)
ff
q()
n
devtools::load_all()
data <- data.frame(a = 1:8)
data
data <- data.frame(a = 1:8, b = 2:9, c = 3:11)
data <- data.frame(a = 1:8, b = 2:9, c = 3:10)
data
usethis::use_package("tidyeval")
usethis::use_package("rlang")
specify(data.frame(a=1:3, b=2:4), a, b)
help(package = "rlang")
?rlang::tidy-dots
?rlang::UG
?rlang::UQ
dfac
dfac
dfac
dfac$A
rename(dfac, C = A)
dfac$C
rename(dfac, C = A) %>% pull(C)
methods("print")
class(dfac$A)
print.character
pryr::otype(dfac$A)
print
is.atomic(dfac$A)
dfac$A
class(dfac$A)
inherits(dfac$A, "vector")
typeof(dfac$A)
?typeof
help(search = "closure")
help.search("closure")
rlang::is_closure(dfac$A)
methods(class = "character")
ff <- factor(1:2)
ff
class(ff)
print.factor
class_acceptable
stop('es')
?rlang::tidy_dots
help(package = "rlang")
?tidy-dots
ff
dfac
specify(dfac, A, B)
specify(dfac, A, B)
numeric("1", "2")
numeric("a")
numeric("1", "2", "3", "4")
numeric(ff = "1", "2", "3", "4")
specify(dfac)
specify(dfac, A)
     nm <- "yup!"
     numeric(!!nm := 1)

nm
nm
numeric(!!nm := 1)
specify(dfac, A, A)
specify(dfac, A, A)
specify(dfac, A, A)
?detach
detach("package:rlang")
detach('rlang')
q()
n
devtools::load_all()
three_way
three_mix
has_pseudoreplications(three_mix, A, subject)
has_pseudoreplications(three_mix, A, subject)
xq
xu
rlang::as_name(xq)
ds
ds
ds
})
Q
has_pseudoreplications(three_mix, B, subject)
three_mix
has_pseudoreplications(three_mix, A, subject)
ls()
usethis::use_test("misc")
d1
d1
d1
d1
d1
has_pseudoreplications(d1, B, sub)
d1
devtools::test()
devtools::test()
three_mix
shuffle_each(three_mix, A, subject)
shuffle_each(three_mix, A, subject)
shuffle_each(three_mix, A, subject)
shuffle_each(three_mix, A, subject)
shuffle_each(three_mix, A, subject)
shuffle_each(three_mix, A, subject)
shuffle_each(three_mix, A, subject)
shuffle_each(three_mix, A, subject)
shuffle_each(three_mix, A, subject)
shuffle_each(three_mix, A, subject)
shuffle_each(three_mix, A, subject)
shuffle_each(three_mix, A, subject)
shuffle_each(three_mix, A, subject)
shuffle_each(three_mix, A, subject)
shuffle_each(three_mix, A, subject)
dfac
devtools::test()
devtools::load_all()
shuffle_each(three_way, A, subject)
shuffle_each(three_way, A, subject)
dat
data
x
unit
n
n
xq
uq
ds
!!xq
ds
Q
shuffle_each(three_way, A, subject)
n
n
xq
uq
n
ds
data
?split
split(data, pull(data, subject))
split(three_mix, pull(data, subject))
split(three_mix, dplyr::pull(data, subject))
split(three_mix, dplyr::pull(three_mix, subject))
eval(subject, three_mix)
`$`(three_mix, subject)
split(three_mix, dplyr::pull(three_mix, subject))
shuffle_each(three_way, A, subject)
n
n
ds <- split(data, `$`(data, !!uq))
`$`(data, !!uq)
uq
rlang::as_symbol(uq)
rlang::ensym(uq)
split(data, `$`(data, unit))
`$`(data, unit)
dplyr::pull(data, !!uq)
data
Q
shuffle_each(three_mix, A, subject)
n
n
n
ds
n
ds
ds <- split(data, dplyr::pull(data, !!uq))
ds
Q
has_pseudoreplications(three_mix, A, subject)
shuffle_each(three_mix, A, subject)
Q
shuffle_each(three_mix, A, subject)
q()
n
?sum
devtools::load_all()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::load_all()
mtcars
head(mtcars)
d <- data.frame(group = rep(c("treatment", "control"), c(6, 6)))
d
shuffle(d, group)
shuffle(d, group)
shuffle(d, group)
d <- data.frame(group = rep(c("treatment", "control"), c(6, 6)),Y = rnorm(12))
d
shuffle(d, group)
shuffle(d, group)
shuffle(d, group)
shuffle(d, group)
shuffle(d, group)
shuffle(d, group)
shuffle(d, group)
shuffle(d, group)
shuffle(d, group)
three_way
three_way
devtools::document()
devtools::document()
devtools::load_all()
?shuffle
q()
n
getwd()
setwd("..")
devtools::load_all()
?shuffle
?shuffle
?shuffle
?shuffle
?shuffle_each
devtools::document()
devtools::load_all()
?shuffling-functions
devtools::document()
devtools::document()
q()
n
devtools::load_all()
getwd()
?shuffle
devtools::install("ginsampler")
q()
n
